{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Section/Section.js","components/Form/Form.js","components/ContactsItem/ContactsItem.js","components/Contacts/Contacts.js","components/ContactsSearch/ContactsSearch.js","components/App.js","index.js","components/Section/Section.module.css","components/Form/Form.module.css"],"names":["module","exports","Section","title","children","className","s","section","section__title","Form","state","name","number","onChange","e","currentTarget","value","setState","onSubmit","preventDefault","newId","uuidv4","props","onAddContact","id","reset","this","form","type","placeholder","pattern","required","form__btn","React","Component","ContactsItem","onDeleteContact","del__btn","onClick","Contacts","contactsArr","contacts__list","map","contacts__item","ContactsSearch","wrapper","Phonebook","contacts","filter","countContats","length","filteredContactsArr","contact","toLowerCase","includes","con","prevState","alert","onSearch","contactId","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","total","text","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,eAAiB,iCAAiC,eAAiB,iCAAiC,KAAO,uBAAuB,SAAW,6B,oKCEpL,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,sBAAKC,UAAWC,IAAEC,QAAlB,UACE,oBAAIF,UAAWC,IAAEE,eAAjB,SAAkCL,IACjCC,K,oCCFcK,E,4MACnBC,MAAQ,CAENC,KAAM,GACNC,OAAQ,I,EAOVC,SAAW,SAAAC,GACT,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,SAAW,SAAAJ,GACTA,EAAEK,iBACF,MAAyB,EAAKT,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACRQ,EAAQC,cAKd,EAAKC,MAAMC,aAAa,CAAEZ,OAAMC,SAAQY,GAAIJ,IAC5C,EAAKK,S,EAGPA,MAAQ,WACN,EAAKR,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,MAAyBc,KAAKhB,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,uBAAMP,UAAWC,IAAEqB,KAAMT,SAAUQ,KAAKR,SAAxC,UACE,gCACE,uBACEU,KAAK,OACLjB,KAAK,OACLkB,YAAY,OACZb,MAAOL,EACPE,SAAUa,KAAKb,SACfiB,QAAQ,yHACR3B,MAAM,kcACN4B,UAAQ,MAGZ,uBACA,gCACE,uBACEH,KAAK,MACLjB,KAAK,SACLkB,YAAY,SACZb,MAAOJ,EACPC,SAAUa,KAAKb,SACfiB,QAAQ,yFACR3B,MAAM,giBACN4B,UAAQ,MAIZ,wBAAQ1B,UAAWC,IAAE0B,UAAWJ,KAAK,SAArC,gC,GA9D0BK,IAAMC,W,gBCFzB,SAASC,EAAT,GAA8D,IAAtCX,EAAqC,EAArCA,GAAIb,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQwB,EAAmB,EAAnBA,gBACvD,OACE,qCACE,8BACGzB,EADH,KACWC,KAEX,wBACEP,UAAWC,IAAE+B,SACbT,KAAK,SACLU,QAAS,kBAAMF,EAAgBZ,IAHjC,uBCLS,SAASe,EAAT,GAAqD,IAAjCC,EAAgC,EAAhCA,YAAaJ,EAAmB,EAAnBA,gBAC9C,OACE,oBAAI/B,UAAWC,IAAEmC,eAAjB,SACGD,EAAYE,KAAI,gBAAGlB,EAAH,EAAGA,GAAIb,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACf,oBAAaP,UAAWC,IAAEqC,eAA1B,SACE,cAACR,EAAD,CACEX,GAAIA,EACJb,KAAMA,EACNC,OAAQA,EACRwB,gBAAiBA,KALZZ,QCLF,SAASoB,EAAT,GAA8C,IAApB5B,EAAmB,EAAnBA,MAAOH,EAAY,EAAZA,SAC9C,OACE,uBAAOR,UAAWC,IAAEuC,QAApB,SACE,uBACEhB,YAAY,wBACZD,KAAK,OACLZ,MAAOA,EACPH,SAAUA,M,ICHGiC,E,4MACnBpC,MAAQ,CACNqC,SAAU,GACVC,OAAQ,I,EAgBVC,aAAe,kBAAM,EAAKvC,MAAMqC,SAASG,Q,EAEzCC,oBAAsB,WACpB,MAA6B,EAAKzC,MAA1BqC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAClB,OAAOD,EAASC,QAAO,SAAAI,GAAO,OAC5BA,EAAQzC,KAAK0C,cAAcC,SAASN,O,EAIxCzB,aAAe,SAAA6B,GAIiB,IAHP,EAAK1C,MAAMqC,SAASC,QACzC,SAAAO,GAAG,OAAIA,EAAI5C,KAAK0C,gBAAkBD,EAAQzC,KAAK0C,iBAE9BH,OACjB,EAAKjC,UAAS,SAAAuC,GAAS,MAAK,CAC1BT,SAAS,GAAD,mBAAMS,EAAUT,UAAhB,CAA0BK,QAGpCK,MAAM,GAAD,OAAIL,EAAQzC,KAAZ,8B,EAIT+C,SAAW,SAAA5C,GACT,EAAKG,SAAS,CAAE+B,OAAQlC,EAAEC,cAAcC,MAAMqC,iB,EAGhDjB,gBAAkB,SAAAuB,GAChB,EAAK1C,UAAS,SAAAuC,GAAS,MAAK,CAC1BT,SAAUS,EAAUT,SAASC,QAAO,SAAAI,GAAO,OAAIA,EAAQ5B,KAAOmC,U,uDAzClE,WACE,IAAMC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aACnDJ,GACFlC,KAAKT,SAAS,CAAE8B,SAAUa,M,gCAI9B,SAAmBJ,GACbA,EAAUT,WAAarB,KAAKhB,MAAMqC,UACpCgB,aAAaE,QAAQ,WAAYJ,KAAKK,UAAUxC,KAAKhB,MAAMqC,a,oBAoC/D,WACE,IAAIoB,EAAQzC,KAAKuB,eAEjB,OACE,qCACE,cAAC/C,EAAD,CAASC,MAAM,YAAf,SACE,cAAC,EAAD,CAAMoB,aAAcG,KAAKH,iBAE3B,cAACrB,EAAD,CAASC,MAAM,WAAf,SACGgE,EAAQ,EACP,qCACE,cAACvB,EAAD,CACE5B,MAAOU,KAAKhB,MAAMsC,OAClBnC,SAAUa,KAAKgC,WAEjB,cAACnB,EAAD,CACEC,YAAad,KAAKyB,sBAClBf,gBAAiBV,KAAKU,qBAI1B,qBAAK/B,UAAWC,IAAEuC,QAAlB,SACE,mBAAGxC,UAAWC,IAAE8D,KAAhB,wC,GAzEyBnC,IAAMC,WCF7CmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BzE,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,kC,kBCAtED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,2B","file":"static/js/main.f5a034b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Contacts_wrapper__2RgJc\",\"contacts__list\":\"Contacts_contacts__list__1Jj5_\",\"contacts__item\":\"Contacts_contacts__item__3Elp4\",\"text\":\"Contacts_text__2dcfm\",\"del__btn\":\"Contacts_del__btn__3RDTb\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div className={s.section}>\r\n      <h2 className={s.section__title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Form.module.css';\r\n\r\nexport default class Form extends React.Component {\r\n  state = {\r\n    // id: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  onChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const newId = uuidv4();\r\n    // this.setState({ id: newId }, () => {\r\n    //   this.props.onAddContact(this.state);\r\n    //   this.reset();\r\n    // });\r\n    this.props.onAddContact({ name, number, id: newId });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={this.onSubmit}>\r\n        <label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            value={name}\r\n            onChange={this.onChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"Number\"\r\n            value={number}\r\n            onChange={this.onChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button className={s.form__btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from '../Contacts/Contacts.module.css';\r\n\r\nexport default function ContactsItem({ id, name, number, onDeleteContact }) {\r\n  return (\r\n    <>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={s.del__btn}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nContactsItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\nimport ContactsItem from '../ContactsItem/ContactsItem';\r\n\r\nexport default function Contacts({ contactsArr, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.contacts__list}>\r\n      {contactsArr.map(({ id, name, number }) => (\r\n        <li key={id} className={s.contacts__item}>\r\n          <ContactsItem\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContacts.propTypes = {\r\n  contactsArr: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from '../Contacts/Contacts.module.css';\r\n\r\nexport default function ContactsSearch({ value, onChange }) {\r\n  return (\r\n    <label className={s.wrapper}>\r\n      <input\r\n        placeholder=\"Find contacts by name\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nContactsSearch.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\nimport Section from './Section/Section';\nimport Form from './Form/Form';\nimport Contacts from './Contacts/Contacts';\nimport ContactsSearch from './ContactsSearch/ContactsSearch';\nimport s from './Contacts/Contacts.module.css';\n\nexport default class Phonebook extends React.Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  countContats = () => this.state.contacts.length;\n\n  filteredContactsArr = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter),\n    );\n  };\n\n  onAddContact = contact => {\n    const isContactExist = this.state.contacts.filter(\n      con => con.name.toLowerCase() === contact.name.toLowerCase(),\n    );\n    if (isContactExist.length === 0) {\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    } else {\n      alert(`${contact.name} is already in contacts.`);\n    }\n  };\n\n  onSearch = e => {\n    this.setState({ filter: e.currentTarget.value.toLowerCase() });\n  };\n\n  onDeleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    let total = this.countContats();\n\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <Form onAddContact={this.onAddContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          {total > 0 ? (\n            <>\n              <ContactsSearch\n                value={this.state.filter}\n                onChange={this.onSearch}\n              />\n              <Contacts\n                contactsArr={this.filteredContactsArr()}\n                onDeleteContact={this.onDeleteContact}\n              />\n            </>\n          ) : (\n            <div className={s.wrapper}>\n              <p className={s.text}>No contacts yet</p>\n            </div>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2ApzL\",\"section__title\":\"Section_section__title__2fSAn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__5Nt0E\",\"form__btn\":\"Form_form__btn__2jI4r\"};"],"sourceRoot":""}